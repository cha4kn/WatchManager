/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'edu.sc.seis.launch4j' version '3.0.6'
}

launch4j {
    outfile = 'WatchManager.exe'
    mainClassName = "watchdatabase.WatchDataBaseMain";
}

processResources {
    from("src/main/resources") {
        include "**/*"
    }

    into "$buildDir/launch4j/resources"

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'  // SQLite JDBC Driver
    implementation 'org.swinglabs:swingx:1.6.1'  // SwingX for extended Swing functionality (optional)
    implementation 'com.formdev:flatlaf:3.2'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.16'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'watchdatabase.WatchDataBaseMain'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
